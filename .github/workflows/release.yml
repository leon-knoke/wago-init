name: Build and Release Fyne App

on:
  push:
    tags:
      - "v*"   # e.g., v1.0.0

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            ext: ""
          - os: windows-latest
            goos: windows
            goarch: amd64
            ext: ".exe"
          - os: macos-latest
            goos: darwin
            goarch: arm64
            ext: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install fyne command
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Build binary
        run: |
          go mod tidy
          fyne package -os ${{ matrix.goos }} -arch ${{ matrix.goarch }} -icon Icon.png
          go build -o "build/myapp-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}" .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}